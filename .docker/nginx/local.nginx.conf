server {
    listen 80;
    server_name localhost;
    
    # Document root
    root /var/www/html/public;
    index index.html index.htm index.php;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # Asset caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # API routes - proxy to PHP-FPM
    location ^~ /api/ {
        try_files $uri $uri/ /index.php?$query_string;
        
        location ~ \.php$ {
            fastcgi_pass app:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            
            # Additional FastCGI parameters
            fastcgi_param HTTP_COOKIE $http_cookie;
            fastcgi_param HTTP_PROXY "";
            fastcgi_param HTTPS $https if_not_empty;
            fastcgi_param REQUEST_ID $request_id;
            fastcgi_read_timeout 300;
            fastcgi_send_timeout 300;
        }
    }
    
    # Sanctum routes - proxy to PHP-FPM
    location ^~ /sanctum/ {
        try_files $uri $uri/ /index.php?$query_string;
        
        location ~ \.php$ {
            fastcgi_pass app:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            
            # Additional FastCGI parameters
            fastcgi_param HTTP_COOKIE $http_cookie;
            fastcgi_param HTTP_PROXY "";
            fastcgi_param HTTPS $https if_not_empty;
            fastcgi_param REQUEST_ID $request_id;
            fastcgi_read_timeout 300;
            fastcgi_send_timeout 300;
        }
    }
    
    # Laravel routes that need PHP processing
    location ~ ^/(login|register|logout|dashboard|admin) {
        try_files $uri $uri/ /index.php?$query_string;
        
        location ~ \.php$ {
            fastcgi_pass app:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            
            # Additional FastCGI parameters
            fastcgi_param HTTP_COOKIE $http_cookie;
            fastcgi_param HTTP_PROXY "";
            fastcgi_param HTTPS $https if_not_empty;
            fastcgi_param REQUEST_ID $request_id;
            fastcgi_read_timeout 300;
            fastcgi_send_timeout 300;
        }
    }
    
    # Handle PHP files directly
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_pass app:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Additional FastCGI parameters
        fastcgi_param HTTP_COOKIE $http_cookie;
        fastcgi_param HTTP_PROXY "";
        fastcgi_param HTTPS $https if_not_empty;
        fastcgi_param REQUEST_ID $request_id;
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
    }
    
    # Built assets from Vite (development and production)
    location /build/ {
        try_files $uri =404;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # SPA fallback - serve index.php for non-API routes
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to backup files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
} 